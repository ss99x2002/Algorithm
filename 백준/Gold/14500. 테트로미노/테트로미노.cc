#include <iostream>
#include <algorithm>

using namespace std;

int n,m;
int board[501][501];
int tet[19][4][4] =  { { {1, 1, 1, 1},
                            {0, 0, 0, 0},
                            {0, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {1, 0, 0, 0},
                            {1, 0, 0, 0},
                            {1, 0, 0, 0},
                            {1, 0, 0, 0} },

                          { {1, 1, 0, 0},
                            {1, 1, 0, 0},
                            {0, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {1, 0, 0, 0},
                            {1, 0, 0, 0},
                            {1, 1, 0, 0},
                            {0, 0, 0, 0} },

                          { {0, 1, 0, 0},
                            {0, 1, 0, 0},
                            {1, 1, 0, 0},
                            {0, 0, 0, 0} },

                          { {1, 1, 1, 0},
                            {1, 0, 0, 0},
                            {0, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {1, 1, 1, 0},
                            {0, 0, 1, 0},
                            {0, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {1, 1, 0, 0},
                            {0, 1, 0, 0},
                            {0, 1, 0, 0},
                            {0, 0, 0, 0} },

                          { {1, 1, 0, 0},
                            {1, 0, 0, 0},
                            {1, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {0, 0, 1, 0},
                            {1, 1, 1, 0},
                            {0, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {1, 0, 0, 0},
                            {1, 1, 1, 0},
                            {0, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {1, 0, 0, 0},
                            {1, 1, 0, 0},
                            {0, 1, 0, 0},
                            {0, 0, 0, 0} },

                          { {0, 1, 1, 0},
                            {1, 1, 0, 0},
                            {0, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {1, 1, 0, 0},
                            {0, 1, 1, 0},
                            {0, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {0, 1, 0, 0},
                            {1, 1, 0, 0},
                            {1, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {1, 0, 0, 0},
                            {1, 1, 0, 0},
                            {1, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {1, 1, 1, 0},
                            {0, 1, 0, 0},
                            {0, 0, 0, 0},
                            {0, 0, 0, 0} },

                          { {0, 1, 0, 0},
                            {1, 1, 0, 0},
                            {0, 1, 0, 0},
                            {0, 0, 0, 0} },

                          { {0, 1, 0, 0},
                            {1, 1, 1, 0},
                            {0, 0, 0, 0},
                            {0, 0, 0, 0} }
                        };


int findMax(int x, int y) { //모든 점에서 시작해서 테트리스의 범위까지 (모든 테트리스 경우의수)
    // 만들 수 있는 sum을 다 만든 다음에 max 구하고 -> 이 max를 다시 다른 점들과의 sum과 비교해서 max 구하기
    int maxSum = 0;
    for (int i=0; i<19; i++){
        int sum = 0;
        for (int dx = 0; dx<4; dx++){
            for (int dy =0; dy<4; dy++){
                int nx = x + dx;
                int ny = y + dy;
                if (nx < 0 || ny < 0 || nx >=n || ny >= m) continue;
                if (!tet[i][dx][dy]) continue;
                sum = sum + board[nx][ny]; 
            }
        }
        maxSum = max(maxSum,sum);
    }
    return maxSum;
}

int main(){
    
    cin >> n >> m;
    for (int i=0; i<n; i++){
        for (int j=0; j<m; j++){
            cin >> board[i][j];
        }
    }
    int ans = 0;
    for (int i=0; i<n; i++){
        for (int j=0; j<m; j++){
            ans = max(ans,findMax(i,j));
        }
    }
    cout << ans;
    return 0;
}